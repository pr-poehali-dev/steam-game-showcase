import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

interface Game {
  id: number;
  title: string;
  description: string;
  plot: string;
  rating: number;
  reviews: number;
  genre: string[];
  imageColor: string;
  emoji: string;
}

const games: Game[] = [
  {
    id: 1,
    title: 'Counter-Strike 2',
    description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —à—É—Ç–µ—Ä –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è',
    plot: 'CS2 - —ç—Ç–æ —ç–≤–æ–ª—é—Ü–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —à—É—Ç–µ—Ä–∞. –¢–µ—Ä—Ä–æ—Ä–∏—Å—Ç—ã –ø—Ä–æ—Ç–∏–≤ —Å–ø–µ—Ü–Ω–∞–∑–∞ –≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω—ã—Ö —Ä–∞—É–Ω–¥–∞—Ö, –≥–¥–µ –∫–∞–∂–¥–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ. –ù–æ–≤—ã–π –¥–≤–∏–∂–æ–∫ Source 2 –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—É—é —Ñ–∏–∑–∏–∫—É, –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ –∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—É—é –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞—Ä—Ç.',
    rating: 4.8,
    reviews: 1250000,
    genre: ['–®—É—Ç–µ—Ä', '–¢–∞–∫—Ç–∏–∫–∞', '–ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä'],
    imageColor: 'from-orange-500 to-red-600',
    emoji: 'üî´'
  },
  {
    id: 2,
    title: 'Dota 2',
    description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è MOBA —Å –≥–ª—É–±–æ–∫–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π',
    plot: '–î–≤–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –ø—è—Ç–∏ –≥–µ—Ä–æ–µ–≤ —Å—Ä–∞–∂–∞—é—Ç—Å—è –∑–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –∫–∞—Ä—Ç–æ–π. –ë–æ–ª–µ–µ 120 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤, –∫–∞–∂–¥—ã–π —Å–æ —Å–≤–æ–∏–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏. –£–Ω–∏—á—Ç–æ–∂—å—Ç–µ –≤—Ä–∞–∂–µ—Å–∫–∏–π Ancient, –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –∫–æ–º–∞–Ω–¥–Ω—É—é —Ä–∞–±–æ—Ç—É –∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ –∫–æ–º–±–æ-–∞—Ç–∞–∫–∏.',
    rating: 4.7,
    reviews: 980000,
    genre: ['MOBA', '–°—Ç—Ä–∞—Ç–µ–≥–∏—è', '–ö–æ–º–∞–Ω–¥–Ω–∞—è'],
    imageColor: 'from-blue-500 to-cyan-600',
    emoji: '‚öîÔ∏è'
  },
  {
    id: 3,
    title: 'Elden Ring',
    description: '–≠–ø–∏—á–µ—Å–∫–∞—è RPG –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π Dark Souls',
    plot: 'Lands Between - –º–∏—Ä, —Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –ø–æ—Å–ª–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è Elden Ring. –í—ã - Tarnished, –∏–∑–≥–Ω–∞–Ω–Ω–∏–∫, –≤–µ—Ä–Ω—É–≤—à–∏–π—Å—è —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å Elden Lord. –ò—Å—Å–ª–µ–¥—É–π—Ç–µ –æ–≥—Ä–æ–º–Ω—ã–π –æ—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä, —Å—Ä–∞–∂–∞–π—Ç–µ—Å—å —Å –±–æ—Å—Å–∞–º–∏ —Ä–∞–∑–º–µ—Ä–æ–º —Å –Ω–µ–±–æ—Å–∫—Ä–µ–±, —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–≤–æ–π —Å—Ç–∏–ª—å –∏–≥—Ä—ã –∏–∑ —Å–æ—Ç–µ–Ω –æ—Ä—É–∂–∏–π –∏ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π.',
    rating: 4.9,
    reviews: 750000,
    genre: ['RPG', 'Souls-like', '–û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä'],
    imageColor: 'from-amber-600 to-yellow-500',
    emoji: 'üó°Ô∏è'
  },
  {
    id: 4,
    title: 'Baldur\'s Gate 3',
    description: '–õ—É—á—à–∞—è RPG –ø–æ D&D 5-–π —Ä–µ–¥–∞–∫—Ü–∏–∏',
    plot: 'Mind Flayers –ø–æ—Ö–∏—Ç–∏–ª–∏ –≤–∞—Å –∏ –∏–º–ø–ª–∞–Ω—Ç–∏—Ä–æ–≤–∞–ª–∏ –ª–∏—á–∏–Ω–∫—É –≤ –≤–∞—à –º–æ–∑–≥. –£ –≤–∞—Å –µ—Å—Ç—å –¥–Ω–∏ –¥–æ –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è –≤ –º–æ–Ω—Å—Ç—Ä–∞. –°–æ–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ø—É—Ç–Ω–∏–∫–æ–≤, –∏—Å—Å–ª–µ–¥—É–π—Ç–µ Forgotten Realms, –¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è—Ç —Å—É–¥—å–±—É –º–∏—Ä–∞. –ö–∞–∂–¥–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏–º–µ–µ—Ç –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è.',
    rating: 4.9,
    reviews: 680000,
    genre: ['RPG', '–ü–æ—à–∞–≥–æ–≤–∞—è', '–°—é–∂–µ—Ç–Ω–∞—è'],
    imageColor: 'from-purple-600 to-pink-600',
    emoji: 'üé≤'
  },
  {
    id: 5,
    title: 'Cyberpunk 2077',
    description: '–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è RPG –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–∏—Ä–µ',
    plot: 'Night City, 2077. –í—ã - V, –Ω–∞—ë–º–Ω–∏–∫-–∫–∏–±–µ—Ä–ø–∞–Ω–∫ –≤ –ø–æ–∏—Å–∫–∞—Ö —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–ø–ª–∞–Ω—Ç–∞—Ç–∞ - –∫–ª—é—á–∞ –∫ –±–µ—Å—Å–º–µ—Ä—Ç–∏—é. –ù–æ –≤ –≤–∞—à–µ–π –≥–æ–ª–æ–≤–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–∏–∑—Ä–∞–∫ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ —Ä–æ–∫–µ—Ä–∞ –î–∂–æ–Ω–Ω–∏ –°–∏–ª—å–≤–µ—Ä—Ö–µ–Ω–¥–∞. –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ —Ç–µ–ª–æ, –≤–∑–ª–∞–º—ã–≤–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—ã, —Å—Ç—Ä–µ–ª—è–π—Ç–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∏–ø–ª–æ–º–∞—Ç–∏—é.',
    rating: 4.5,
    reviews: 920000,
    genre: ['RPG', '–≠–∫—à–µ–Ω', '–ö–∏–±–µ—Ä–ø–∞–Ω–∫'],
    imageColor: 'from-cyan-400 to-blue-600',
    emoji: 'ü§ñ'
  },
  {
    id: 6,
    title: 'Hogwarts Legacy',
    description: '–ú–∞–≥–∏—è –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –º–∏—Ä–µ –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–∞',
    plot: '–•–æ–≥–≤–∞—Ä—Ç—Å, 1890-–µ –≥–æ–¥—ã. –í—ã - —Å—Ç—É–¥–µ–Ω—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä–µ–≤–Ω—é—é –º–∞–≥–∏—é. –ü–æ—Å–µ—â–∞–π—Ç–µ —É—Ä–æ–∫–∏ –∑–µ–ª–∏–π, —Ç—Ä–∞–Ω—Å—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –∑–∞—â–∏—Ç—ã –æ—Ç —Ç—ë–º–Ω—ã—Ö –∏—Å–∫—É—Å—Å—Ç–≤. –ò—Å—Å–ª–µ–¥—É–π—Ç–µ –ó–∞–ø—Ä–µ—Ç–Ω—ã–π –ª–µ—Å, –ª–µ—Ç–∞–π—Ç–µ –Ω–∞ –º–µ—Ç–ª–∞—Ö, —Ä–∞—Å–∫—Ä–æ–π—Ç–µ –∑–∞–≥–æ–≤–æ—Ä –≥–æ–±–ª–∏–Ω–æ–≤ –∏ —Ç—ë–º–Ω—ã—Ö –º–∞–≥–æ–≤.',
    rating: 4.6,
    reviews: 550000,
    genre: ['RPG', '–≠–∫—à–µ–Ω', '–ú–∞–≥–∏—è'],
    imageColor: 'from-indigo-500 to-purple-700',
    emoji: 'ü™Ñ'
  }
];

const Index = () => {
  const [selectedGame, setSelectedGame] = useState<Game | null>(null);
  const [explodingGame, setExplodingGame] = useState<number | null>(null);
  const [particles, setParticles] = useState<{ id: string; x: number; y: number; tx: number; ty: number }[]>([]);

  const handleGameClick = (game: Game, event: React.MouseEvent<HTMLDivElement>) => {
    const card = event.currentTarget;
    const rect = card.getBoundingClientRect();
    
    setExplodingGame(game.id);
    
    const newParticles = Array.from({ length: 20 }, (_, i) => ({
      id: `${game.id}-${i}`,
      x: rect.left + rect.width / 2,
      y: rect.top + rect.height / 2,
      tx: (Math.random() - 0.5) * 400,
      ty: (Math.random() - 0.5) * 400
    }));
    setParticles(newParticles);

    setTimeout(() => {
      setExplodingGame(null);
      setSelectedGame(game);
      setParticles([]);
    }, 800);
  };

  const handleClose = () => {
    setSelectedGame(null);
  };

  return (
    <div className="min-h-screen bg-background relative overflow-hidden">
      <div className="absolute inset-0 bg-gradient-to-br from-background via-card to-background opacity-50" />
      
      <div className="relative z-10">
        <header className="py-8 px-6 border-b border-border/50 backdrop-blur-sm">
          <div className="max-w-7xl mx-auto">
            <h1 className="text-5xl font-heading font-bold text-transparent bg-clip-text bg-gradient-to-r from-primary via-secondary to-accent mb-2">
              Steam Top Games
            </h1>
            <p className="text-muted-foreground text-lg">–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–≥—Ä—ã –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</p>
          </div>
        </header>

        <main className="max-w-7xl mx-auto px-6 py-12">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {games.map((game, index) => (
              <Card
                key={game.id}
                onClick={(e) => handleGameClick(game, e)}
                className={`group relative overflow-hidden cursor-pointer transition-all duration-300 hover:scale-105 hover:shadow-2xl hover:shadow-primary/20 ${
                  explodingGame === game.id ? 'animate-float' : ''
                } animate-fade-in`}
                style={{ animationDelay: `${index * 100}ms` }}
              >
                <div className={`absolute inset-0 bg-gradient-to-br ${game.imageColor} opacity-20 group-hover:opacity-30 transition-opacity`} />
                
                <div className="relative p-6 space-y-4">
                  <div className="flex items-start justify-between">
                    <div className="text-6xl">{game.emoji}</div>
                    <div className="flex items-center gap-1 bg-primary/20 px-3 py-1 rounded-full">
                      <Icon name="Star" size={16} className="text-primary fill-primary" />
                      <span className="font-heading font-bold text-primary">{game.rating}</span>
                    </div>
                  </div>

                  <div>
                    <h3 className="text-2xl font-heading font-bold text-foreground mb-2 group-hover:text-primary transition-colors">
                      {game.title}
                    </h3>
                    <p className="text-muted-foreground text-sm leading-relaxed">
                      {game.description}
                    </p>
                  </div>

                  <div className="flex flex-wrap gap-2">
                    {game.genre.map((g) => (
                      <Badge key={g} variant="secondary" className="bg-card/50 hover:bg-primary/20">
                        {g}
                      </Badge>
                    ))}
                  </div>

                  <div className="flex items-center gap-2 text-sm text-muted-foreground pt-2 border-t border-border/50">
                    <Icon name="Users" size={16} />
                    <span>{(game.reviews / 1000).toFixed(0)}K –æ—Ç–∑—ã–≤–æ–≤</span>
                  </div>
                </div>

                {explodingGame === game.id && (
                  <div className="absolute inset-0 bg-gradient-to-br from-primary to-accent animate-explode pointer-events-none" />
                )}
              </Card>
            ))}
          </div>
        </main>
      </div>

      {particles.map((particle) => (
        <div
          key={particle.id}
          className="fixed w-3 h-3 rounded-full bg-gradient-to-br from-primary via-secondary to-accent animate-particle pointer-events-none z-50"
          style={{
            left: particle.x,
            top: particle.y,
            '--tx': `${particle.tx}px`,
            '--ty': `${particle.ty}px`
          } as React.CSSProperties}
        />
      ))}

      {selectedGame && (
        <div
          className="fixed inset-0 bg-black/80 backdrop-blur-md z-50 flex items-center justify-center p-6 animate-fade-in"
          onClick={handleClose}
        >
          <div
            className="max-w-4xl w-full bg-card border border-border/50 rounded-2xl overflow-hidden animate-scale-in shadow-2xl"
            onClick={(e) => e.stopPropagation()}
          >
            <div className={`h-48 bg-gradient-to-br ${selectedGame.imageColor} relative flex items-center justify-center`}>
              <div className="text-9xl">{selectedGame.emoji}</div>
              <button
                onClick={handleClose}
                className="absolute top-4 right-4 w-10 h-10 rounded-full bg-background/20 backdrop-blur-sm hover:bg-background/40 flex items-center justify-center transition-colors"
              >
                <Icon name="X" size={24} className="text-foreground" />
              </button>
            </div>

            <div className="p-8 space-y-6">
              <div>
                <h2 className="text-4xl font-heading font-bold text-foreground mb-2">
                  {selectedGame.title}
                </h2>
                <div className="flex items-center gap-4">
                  <div className="flex items-center gap-1">
                    {Array.from({ length: 5 }).map((_, i) => (
                      <Icon
                        key={i}
                        name="Star"
                        size={20}
                        className={`${
                          i < Math.floor(selectedGame.rating)
                            ? 'text-primary fill-primary'
                            : 'text-muted'
                        }`}
                      />
                    ))}
                    <span className="ml-2 font-heading font-bold text-xl text-foreground">
                      {selectedGame.rating}
                    </span>
                  </div>
                  <div className="flex items-center gap-2 text-muted-foreground">
                    <Icon name="Users" size={18} />
                    <span>{(selectedGame.reviews / 1000).toFixed(0)}K –æ—Ç–∑—ã–≤–æ–≤</span>
                  </div>
                </div>
              </div>

              <div className="flex flex-wrap gap-2">
                {selectedGame.genre.map((g) => (
                  <Badge key={g} variant="outline" className="text-base px-4 py-1 border-primary/50 text-primary">
                    {g}
                  </Badge>
                ))}
              </div>

              <div className="space-y-3">
                <h3 className="text-xl font-heading font-bold text-foreground flex items-center gap-2">
                  <Icon name="BookOpen" size={24} className="text-primary" />
                  –°—é–∂–µ—Ç
                </h3>
                <p className="text-foreground leading-relaxed text-base">
                  {selectedGame.plot}
                </p>
              </div>

              <div className="grid grid-cols-2 gap-4 pt-4">
                <button className="px-6 py-3 bg-primary text-primary-foreground rounded-lg font-heading font-bold hover:bg-primary/90 transition-colors flex items-center justify-center gap-2">
                  <Icon name="ShoppingCart" size={20} />
                  –ö—É–ø–∏—Ç—å –≤ Steam
                </button>
                <button className="px-6 py-3 bg-secondary text-secondary-foreground rounded-lg font-heading font-bold hover:bg-secondary/90 transition-colors flex items-center justify-center gap-2">
                  <Icon name="Heart" size={20} />
                  –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default Index;
